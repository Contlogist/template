basePath: /v1
definitions:
  db_user.User:
    properties:
      name:
        type: string
      params:
        $ref: '#/definitions/db_user.UserParams'
    type: object
  db_user.UserFilter:
    properties:
      company_id:
        type: integer
      name:
        type: string
    type: object
  db_user.UserParams:
    properties:
      name:
        type: string
    type: object
host: localhost:1000
info:
  contact: {}
  description: Шаблон для создания нового сервиса
  title: TEMPLATE
  version: $(VERSION)
paths:
  /user/delete:
    delete:
      consumes:
      - application/json
      description: Метод удаления пользователя
      parameters:
      - description: ID пользователя
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - User
  /user/get:
    get:
      consumes:
      - application/json
      description: Метод получения пользователя по id
      parameters:
      - description: ID пользователя
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/db_user.User'
            - properties:
                id:
                  type: integer
              type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - User
  /user/get.list:
    get:
      consumes:
      - application/json
      description: Метод получения списка пользователей
      parameters:
      - description: Фильтр
        in: body
        name: filter
        schema:
          $ref: '#/definitions/db_user.UserFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                allOf:
                - $ref: '#/definitions/db_user.User'
                - properties:
                    id:
                      type: integer
                  type: object
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - User
  /user/post:
    post:
      consumes:
      - application/json
      description: Метод создания пользователя
      parameters:
      - description: Пользователь
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/db_user.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/db_user.User'
            - properties:
                id:
                  type: integer
              type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - User
  /user/put:
    put:
      consumes:
      - application/json
      description: Метод обновления пользователя
      parameters:
      - description: Пользователь
        in: body
        name: user
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/db_user.User'
          - properties:
              id:
                type: integer
            type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - User
securityDefinitions:
  Token-A:
    in: header
    name: Token-A
    type: apiKey
swagger: "2.0"
